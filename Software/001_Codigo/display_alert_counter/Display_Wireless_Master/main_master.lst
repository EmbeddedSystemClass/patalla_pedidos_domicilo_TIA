CCS PCH C Compiler, Version 5.015, 13314               18-Aug-20 10:25

               Filename:   C:\Users\Erick Miranda\Desktop\Proyectos TIA\Wi-fi Alertas de Pedidos TIA\Order_Alert_Display_Counter\firmware\display_alert_counter\Display_Wireless_Master\main_master.lst

               ROM used:   336 bytes (1%)
                           Largest free fragment is 32428
               RAM used:   23 (1%) at main() level
                           25 (2%) worst case
               Stack used: 3 locations (2 in main + 1 for interrupts)
               Stack size: 31

*
0000:  GOTO   00E4
*
0008:  MOVWF  04
000A:  MOVFF  FD8,05
000E:  MOVFF  FE0,06
0012:  MOVLB  0
0014:  MOVFF  FE9,0C
0018:  MOVFF  FEA,07
001C:  MOVFF  FE1,08
0020:  MOVFF  FE2,09
0024:  MOVFF  FD9,0A
0028:  MOVFF  FDA,0B
002C:  MOVFF  FF3,12
0030:  MOVFF  FF4,13
0034:  MOVFF  FFA,14
0038:  MOVFF  00,0E
003C:  MOVFF  01,0F
0040:  MOVFF  02,10
0044:  MOVFF  03,11
0048:  BTFSS  F9D.5
004A:  GOTO   0054
004E:  BTFSC  F9E.5
0050:  GOTO   0096
0054:  MOVFF  0E,00
0058:  MOVFF  0F,01
005C:  MOVFF  10,02
0060:  MOVFF  11,03
0064:  MOVFF  0C,FE9
0068:  MOVFF  07,FEA
006C:  BSF    07.7
006E:  MOVFF  08,FE1
0072:  MOVFF  09,FE2
0076:  MOVFF  0A,FD9
007A:  MOVFF  0B,FDA
007E:  MOVFF  12,FF3
0082:  MOVFF  13,FF4
0086:  MOVFF  14,FFA
008A:  MOVF   04,W
008C:  MOVFF  06,FE0
0090:  MOVFF  05,FD8
0094:  RETFIE 0
.................... #include <main_master.h> 
.................... #include <18F4520.h> 
.................... //////////// Standard Header file for the PIC18F4520 device //////////////// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2013 Custom Computer Services          //// 
.................... //// This source code may only be used by licensed users of the CCS C  //// 
.................... //// compiler.  This source code may only be distributed to other      //// 
.................... //// licensed users of the CCS C compiler.  No other use, reproduction //// 
.................... //// or distribution is permitted without written permission.          //// 
.................... //// Derivative programs created using this software in object code    //// 
.................... //// form are not restricted in any way.                               //// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... #device PIC18F4520 
....................  
.................... #list 
....................  
.................... #device ADC=16 
....................  
.................... #FUSES NOWDT                    //No Watch Dog Timer 
.................... #FUSES NOBROWNOUT               //No brownout reset 
.................... #FUSES NOLVP                    //No low voltage prgming, B3(PIC16) or B5(PIC18) used for I/O 
.................... #FUSES NOXINST                  //Extended set extension and Indexed Addressing mode disabled (Legacy mode) 
....................  
.................... #use delay(internal=8000000) 
*
00A4:  CLRF   FEA
00A6:  MOVLW  18
00A8:  MOVWF  FE9
00AA:  MOVF   FEF,W
00AC:  BZ    00C8
00AE:  MOVLW  02
00B0:  MOVWF  01
00B2:  CLRF   00
00B4:  DECFSZ 00,F
00B6:  BRA    00B4
00B8:  DECFSZ 01,F
00BA:  BRA    00B2
00BC:  MOVLW  97
00BE:  MOVWF  00
00C0:  DECFSZ 00,F
00C2:  BRA    00C0
00C4:  DECFSZ FEF,F
00C6:  BRA    00AE
00C8:  RETURN 0
....................  
....................  
.................... #use rs232(baud=9600, xmit=PIN_C6,rcv=PIN_C7,parity=N, bits=8) 
....................                                                             
.................... #define DISPLAY_SS   PIN_D1     
....................                                  
.................... // Modos de comunicación SPI          
.................... #define SPI_MODE_0  (SPI_L_TO_H | SPI_XMIT_L_TO_H)            
.................... #define SPI_MODE_1  (SPI_L_TO_H)  
.................... #define SPI_MODE_2  (SPI_H_TO_L)                           
.................... #define SPI_MODE_3  (SPI_H_TO_L | SPI_XMIT_L_TO_H)              
....................                               
.................... #byte PORTA = 0xF80    // Dirección del Registro para 18F4520 
.................... #byte PORTB = 0xF81    // Dirección del Registro para 18F4520      
.................... #byte PORTC = 0xF82    // Dirección del Registro para 18F4520 
.................... #byte PORTD = 0xF83    // Dirección del Registro para 18F4520                                              
.................... #byte SSPBUF = 0xFC9   // Dirección del Registro para 18F4520  
....................                                                                                      
.................... unsigned int8 valor; 
....................           
....................           
.................... #int_RDA 
.................... void RDA_isr(){      
....................  
....................    valor=getc(); 
*
0096:  BTFSS  F9E.5
0098:  BRA    0096
009A:  MOVFF  FAE,16
....................  
009E:  BCF    F9E.5
00A0:  GOTO   0054
.................... }  
....................   
....................  
.................... void write_display(unsigned int8 n){  
....................  
....................    output_low(DISPLAY_SS);                           
*
00CA:  BCF    F95.1
00CC:  BCF    F8C.1
....................    spi_write(n);                                    
00CE:  MOVF   FC9,W
00D0:  MOVFF  17,FC9
00D4:  RRCF   FC7,W
00D6:  BNC   00D4
....................    output_high(DISPLAY_SS);                 
00D8:  BCF    F95.1
00DA:  BSF    F8C.1
....................    delay_ms(10);           
00DC:  MOVLW  0A
00DE:  MOVWF  18
00E0:  RCALL  00A4
00E2:  RETURN 0
.................... } 
....................             
.................... void main() {     
00E4:  CLRF   FF8
00E6:  BCF    FD0.7
00E8:  BSF    07.7
00EA:  MOVLW  70
00EC:  MOVWF  FD3
00EE:  MOVF   FD3,W
00F0:  BCF    FB8.3
00F2:  MOVLW  0C
00F4:  MOVWF  FAF
00F6:  MOVLW  A2
00F8:  MOVWF  FAC
00FA:  MOVLW  90
00FC:  MOVWF  FAB
00FE:  NOP   
0100:  NOP   
0102:  MOVF   FC1,W
0104:  ANDLW  C0
0106:  IORLW  0F
0108:  MOVWF  FC1
010A:  MOVLW  07
010C:  MOVWF  FB4
....................  
....................    valor = 0;                   
010E:  CLRF   16
....................    output_high(DISPLAY_SS);  
0110:  BCF    F95.1
0112:  BSF    F8C.1
....................    SETUP_SPI(SPI_MASTER | SPI_MODE_0 | SPI_CLK_DIV_4 | SPI_SAMPLE_AT_END);   
0114:  BCF    FC6.5
0116:  BCF    F94.5
0118:  BSF    F94.4
011A:  BCF    F94.3
011C:  MOVLW  20
011E:  MOVWF  FC6
0120:  MOVLW  C0
0122:  MOVWF  FC7
....................    delay_ms(10); 
0124:  MOVLW  0A
0126:  MOVWF  18
0128:  RCALL  00A4
....................    CLEAR_INTERRUPT(INT_RDA);      
....................    ENABLE_INTERRUPTS(INT_RDA);                                                         
012A:  BSF    F9D.5
....................    ENABLE_INTERRUPTS(GLOBAL);                               
012C:  MOVLW  C0
012E:  IORWF  FF2,F
....................                          
....................    while(TRUE) {             // Mai Loop.   
....................                                                               
....................       switch (valor){                     
0130:  MOVF   16,W
0132:  XORLW  52
0134:  BZ    0138
0136:  BRA    014A
....................          case 'R':write_display(valor); 
0138:  MOVFF  16,17
013C:  RCALL  00CA
....................                   delay_ms(10);   
013E:  MOVLW  0A
0140:  MOVWF  18
0142:  RCALL  00A4
....................                   valor = 0; 
0144:  CLRF   16
....................                   reset_cpu();   
0146:  RESET
....................                   break;           
0148:  BRA    0150
....................          default:write_display(valor); 
014A:  MOVFF  16,17
014E:  RCALL  00CA
....................                  break;    
....................       }    
0150:  BRA    0130
....................    }                            
.................... }                                                                     
0152:  SLEEP 

Configuration Fuses:
   Word  1: C800   INTRC_IO FCMEN IESO
   Word  2: 1E18   PUT NOBROWNOUT BORV21 NOWDT WDT32768
   Word  3: 8700   CCP2C1 PBADEN LPT1OSC MCLR
   Word  4: 0081   STVREN NOLVP NOXINST NODEBUG
   Word  5: C00F   NOPROTECT NOCPB NOCPD
   Word  6: E00F   NOWRT NOWRTC NOWRTB NOWRTD
   Word  7: 400F   NOEBTR NOEBTRB
